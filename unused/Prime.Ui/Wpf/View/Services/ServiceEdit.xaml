<UserControl x:Class="Prime.Ui.Wpf.ServiceEdit"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mui="http://firstfloorsoftware.com/ModernUI"
             xmlns:dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             xmlns:model="clr-namespace:Prime.Ui.Wpf.ViewModel"
             dialog:DialogParticipation.Register="{Binding}"
             mc:Ignorable="d" 
             d:DesignHeight="500" d:DesignWidth="600">

    <UserControl.DataContext>
        <model:ServiceEditViewModel />
    </UserControl.DataContext>
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToHiddenConverter"/>
    </UserControl.Resources>
    <TextBlock FontSize="15">
        <StackPanel MinWidth="550">

                <TextBlock Text="{Binding Path=Service.Title}" Margin="0,30,0,20" FontSize="35"/>
                <StackPanel Margin="0,0,0,16">
                    <TextBlock TextWrapping="Wrap">
                        When Prime connects to a service, it needs security keys to let that service know who you are. These are sometimes referred to as 'Api Keys'.
                        <LineBreak />
                        <LineBreak />
                       These keys are highly sensitive, with them anybody can transfer your assets keep them private. Prime will store them in an encrypted database on your machine.
                        <LineBreak />
                    </TextBlock>
                    <TextBlock TextWrapping="Wrap" Opacity=".8" FontStyle="Italic">
                        To find your keys, visit the website for this service and follow the instructions there.
                    </TextBlock>
                </StackPanel>

                <!-- actual form starts here -->
                <StackPanel x:Name="Form" Orientation="Vertical">

                    <!-- create viewmodel -->

                    <StackPanel.Resources>
                        <Style TargetType="StackPanel">
                            <Setter Property="Orientation" Value="Horizontal" />
                            <Setter Property="VerticalAlignment" Value="Top" />
                            <Setter Property="Margin" Value="0,0,0,4" />
                        </Style>
                        <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
                            <Setter Property="Width" Value="150" />
                            <Setter Property="VerticalAlignment" Value="top" />
                        </Style>
                    </StackPanel.Resources>

                    <StackPanel Margin="0,20,0,0">
                        <Label Content="Name (For you)" Target="{Binding ElementName=ApiName}"/>
                        <TextBox x:Name="ApiName" Width="400" Text="{Binding ApiName, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" AcceptsReturn="True" SpellCheck.IsEnabled="True" />
                    </StackPanel>
                    
                    <StackPanel Margin="0,20,0,0">
                        <Label Content="{Binding Configuration.ApiKeyName}" Target="{Binding ElementName=ApiKey}"/>
                        <TextBox x:Name="ApiKey" Width="400" Text="{Binding ApiKey, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" AcceptsReturn="True" SpellCheck.IsEnabled="False" />
                    </StackPanel>
                    
                    <StackPanel Margin="0,20,0,0" Visibility="{Binding Configuration.HasSecret, Converter={StaticResource BoolToHiddenConverter}}">
                        <Label Content="{Binding Configuration.ApiSecretName}" Target="{Binding ElementName=ApiSecret}"/>
                        <TextBox x:Name="ApiSecret" Width="400" Text="{Binding ApiSecret, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" AcceptsReturn="True" SpellCheck.IsEnabled="False"/>
                    </StackPanel>
                    
                    <StackPanel Margin="0,20,0,0" Visibility="{Binding Configuration.HasExtra, Converter={StaticResource BoolToHiddenConverter}}">
                        <Label Content="{Binding Configuration.ApiExtraName}" Target="{Binding ElementName=ApiExtra}"/>
                        <TextBox x:Name="ApiExtra" Width="400" Text="{Binding ApiExtra1, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" AcceptsReturn="True" SpellCheck.IsEnabled="False"/>
                    </StackPanel>
                    
                    <StackPanel Orientation="Horizontal" Margin="150,20,0,0">
                        <Path Width="16" Height="16" Margin="0,3,5,0" Visibility="{Binding StatusResult, Converter={StaticResource BoolToHiddenConverter}}"
                              x:Name="CheckMark" SnapsToDevicePixels="False"
                              Stroke="GreenYellow" Fill="Black" StrokeThickness="2"
                              Data="M 12.4227,0.00012207C 12.4867,0.126587 12.5333,0.274536 12.6787,0.321411C 9.49199,3.24792 6.704,6.57336 4.69865,10.6827C 4.04399,11.08 3.47066,11.5573 2.83199, 11.9706C 2.09467,10.2198 1.692,8.13196 3.8147e-006, 7.33606C 0.500004,6.79871 1.31733,6.05994 1.93067,6.2428C 2.85999,6.51868 3.14,7.9054 3.60399,8.81604C 5.80133, 5.5387 8.53734,2.19202 12.4227,0.00012207 Z " />
                        <TextBlock Text="{Binding StatusText}"/>
                    </StackPanel>
                    
                </StackPanel>
                <Button HorizontalAlignment="Right" Command="{Binding Path=DeleteCommand}" Content="Remove Key" Margin="0,0,100,0" Visibility="{Binding IsDeleteVisible, Converter={StaticResource BoolToVisibilityConverter}}"/>
            </StackPanel>
    </TextBlock>
</UserControl>
